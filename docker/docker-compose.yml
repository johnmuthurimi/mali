version: '3.7'
services:
    rabbitmq-service:
        image: 'rabbitmq:3.6-management-alpine'
        environment:
            RABBITMQ_DEFAULT_USER: appuser
            RABBITMQ_DEFAULT_PASS: appuser
        ports:
            - '5672:5672'
            - '15672:15672'
        volumes:
            - rabbitmq_service:/var/lib/rabbitmq
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]

    mysql-service:
        image: 'mysql:5.7'
        environment:
            MYSQL_USER: appuser
            MYSQL_PASSWORD: appuser
            MYSQL_ROOT_PASSWORD: root
        ports:
            - '3308:3306'
        volumes:
            - mysql_service:/var/lib/mysql
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]

    web-service:
        image: 'mucunga90/web-service:1.0.0'
        ports:
            - '80:80'
        volumes:
            - web_service:/etc/nginx
        networks:
            - frontend-tier
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]
        depends_on:
            - rabbitmq-service
            - mysql-service
            - config-service
            - discovery-service
            - auth-service
            - gateway-service
            - monitoring-service
            - alert-service
            - user-service

    config-service:
        image: 'mucunga90/config-service:1.0.0'
        ports:
            - '8888:8888'
        volumes:
            - config_service:/app
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]
        depends_on:
            - mysql-service
            - rabbitmq-service

    discovery-service:
        image: 'mucunga90/discovery-service:1.0.0'
        ports:
            - '8761:8761'
        volumes:
            - discovery_service:/app
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]
        depends_on:
            - rabbitmq-service
            - mysql-service
            - config-service

    auth-service:
        image: 'mucunga90/auth-service:1.0.0'
        ports:
            - '5001:5001'
        volumes:
            - auth_service:/app
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]
        depends_on:
            - rabbitmq-service
            - mysql-service
            - config-service
            - discovery-service

    gateway-service:
        image: 'mucunga90/gateway-service:1.0.0'
        ports:
            - '8080:8080'
        volumes:
            - gateway_service:/app
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]
        depends_on:
            - rabbitmq-service
            - mysql-service
            - config-service
            - discovery-service
            - auth-service

    monitoring-service:
        image: 'openzipkin/zipkin'
        ports:
            - '9411:9411'
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]
        depends_on:
            - rabbitmq-service
            - mysql-service
            - config-service
            - discovery-service
            - auth-service
            - gateway-service

    elasticsearch-service:
        image: 'elasticsearch'
        ports:
            - '9200:9200'
            - '9300:9300'
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]
        depends_on:
            - monitoring-service

    kibana-service:
        image: 'kibana'
        ports:
            - '5601:5601'
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]
        links:
            - elasticsearch-service
        depends_on:
            - monitoring-service
            - elasticsearch-service

    logstash-service:
        image: 'logstash'
        ports:
            - '5000:5000'
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]
        links:
            - elasticsearch-service
        depends_on:
            - monitoring-service
            - elasticsearch-service
            - kibana-service

    alert-service:
        image: 'mucunga90/alert-service:1.0.0'
        ports:
            - '5002:5002'
        volumes:
            - alert_service:/app
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]
        depends_on:
            - rabbitmq-service
            - mysql-service
            - config-service
            - discovery-service
            - auth-service
            - gateway-service
            - monitoring-service

    user-service:
        image: 'mucunga90/user-service:1.0.0'
        ports:
            - '5003:5003'
        volumes:
            - user_service:/app
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]
        depends_on:
            - rabbitmq-service
            - mysql-service
            - config-service
            - discovery-service
            - auth-service
            - gateway-service
            - monitoring-service

networks:
    frontend-tier:
        driver: overlay
        attachable: true
    backend-tier:
        driver: overlay
        attachable: true

volumes:
    rabbitmq_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/rabbitmq_service
    mysql_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/mysql_service
    web_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/web_service
    config_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/config_service
    discovery_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/discovery_service
    auth_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/auth_service
    gateway_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/gateway_service
    elasticsearch_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/elasticsearch_service
    user_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/user_service
    alert_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/alert_service
