version: '3.7'
services:
    uaa:
        image: scg-demo-uaa:latest
        container_name: uaa
        ports:
          - "8090:8090"
        logging:
            options: {max-size: 100m, max-file: '10'}
        volumes:
            - uaa:/etc/nginx
        networks:
            - frontend-tier
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]

    consul-service:
        image: consul
        environment:
            - CONSUL_BOOTSTRAP_EXPECT=1
            - CONSUL_CLIENT_LAN_ADDRESS=0.0.0.0
            - CONSUL_DISABLE_KEYRING_FILE=true
        ports:
            - '8500:8500'
        logging:
            options: {max-size: 100m, max-file: '10'}
        volumes:
            - consul_service:/consul/data
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]

    rabbitmq-service:
        image: 'rabbitmq:3.6-management-alpine'
        environment:
            RABBITMQ_DEFAULT_USER: appuser
            RABBITMQ_DEFAULT_PASS: appuser
        ports:
            - '5672:5672'
            - '15672:15672'
        logging:
            options: {max-size: 100m, max-file: '10'}
        volumes:
            - rabbitmq_service:/var/lib/rabbitmq
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]

    mysql-service:
        image: 'mysql:5.7'
        environment:
            MYSQL_USER: appuser
            MYSQL_PASSWORD: appuser
            MYSQL_ROOT_PASSWORD: root
        ports:
            - '3308:3306'
        logging:
            options: {max-size: 100m, max-file: '10'}
        volumes:
            - mysql_service:/var/lib/mysql
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]

    web-service:
        image: 'mucunga90/web-service:1.0.0'
        ports:
            - '80:80'
        logging:
            options: {max-size: 100m, max-file: '10'}
        volumes:
            - web_service:/etc/nginx
        networks:
            - frontend-tier
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]
        depends_on:
            - consul-service
            - mysql-service
            - rabbitmq-service

    gateway-service:
        image: 'mucunga90/gateway-service:1.0.0'
        ports:
            - '8080:8080'
        logging:
            options: {max-size: 100m, max-file: '10'}
        volumes:
            - gateway_service:/var/log
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]
        depends_on:
            - consul-service
            - mysql-service
            - rabbitmq-service

    user-service:
        image: 'mucunga90/user-service:1.0.0'
        ports:
            - '5001:5001'
        logging:
            options: {max-size: 100m, max-file: '10'}
        volumes:
            - user_service:/var/log
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]
        depends_on:
            - consul-service
            - mysql-service
            - rabbitmq-service

    alert-service:
        image: 'mucunga90/alert-service:1.0.0'
        ports:
            - '5002:5002'
        logging:
            options: {max-size: 100m, max-file: '10'}
        volumes:
            - alert_service:/var/log
        networks:
            - backend-tier
        deploy:
            replicas: 1
            update_config:
                parallelism: 2
                delay: 10s
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 10
            placement:
                constraints: [node.role == manager]
        depends_on:
            - consul-service
            - mysql-service
            - rabbitmq-service

networks:
    frontend-tier:
        driver: overlay
        attachable: true
    backend-tier:
        driver: overlay
        attachable: true

volumes:
    uaa:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/uaa
    consul_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/consul_service
    rabbitmq_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/rabbitmq_service
    mysql_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/mysql_service
    web_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/web_service
    gateway_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/gateway_service
    user_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/user_service
    alert_service:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/muthurimi/docker/mali/alert_service
