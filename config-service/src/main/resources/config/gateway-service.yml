server:
    port: '${PORT:8080}'
eureka:
    instance:
        lease-renewal-interval-in-seconds: 30
        lease-expiration-duration-in-seconds: 90
        status-page-url-path: ${management.endpoints.web.base-path}/info
        health-check-url-path: ${management.endpoints.web.base-path}/health
    server:
        peer-node-read-timeout-ms: 300000
        enable-self-preservation: false
    client:
        enabled: true
        healthcheck:
            enabled: true
        fetch-registry: true
        register-with-eureka: true
        instance-info-replication-interval-seconds: 10
        registry-fetch-interval-seconds: 10
hystrix:
    command:
        default:
            execution:
                isolation:
                    thread:
                        timeoutInMilliseconds: 20000
hystrix.command.default.execution.timeout.enabled: false
ribbon:
    eureka:
        enabled: true
    ReadTimeout: 600000
    ConnectTimeout: 10000
    MaxAutoRetries: 3
    MaxAutoRetriesNextServer: 5
    OkToRetryOnAllOperations: true
    restclient:
        enabled: true
zuul:
    host:
        max-total-connections: 1000
        max-per-route-connections: 100
        connect-timeout-millis: 50000
        socket-timeout-millis: 100000
        time-to-live: 100000
    semaphore:
        max-semaphores: 500
    retryable: true
    routes:
        auth-service:
            path: '/auth/**'
            service-id: AUTH-SERVICE
            strip-prefix: false
            sensitive-headers: 'Cookie,Set-Cookie'
        user-service:
            path: '/user/**'
            service-id: USER-SERVICE
            strip-prefix: false
    host:
        connect-timeout-millis: 10000
        socket-timeout-millis: 60000
management:
    metrics.tags.application: ${spring.application.name}
    endpoints.web.exposure.include: prometheus
